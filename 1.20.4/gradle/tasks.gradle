task commonClean(type: GradleBuild) {
    group = "_main"
    tasks = [
            ":Common:clean"
    ]
}

task fabricClean(type: GradleBuild) {
    group = "_main"
    tasks = [
            ":Common:clean",
            ":Fabric:clean"
    ]
}

task neoforgeClean(type: GradleBuild) {
    group = "_main"
    tasks = [
            ":Common:clean",
            ":NeoForge:clean"
    ]
}

task forgeClean(type: GradleBuild) {
    group = "_main"
    tasks = [
            ":Common:clean",
            ":Forge:clean"
    ]
}

task allClean(type: GradleBuild) {
    group = "_main"
    tasks = [
            ":Common:clean",
            ":Fabric:clean",
            ":NeoForge:clean",
            ":Forge:clean"
    ]
}

task fabricBuild(type: GradleBuild) {
    group = "_main"
    tasks = [
            ":Common:clean",
            ":Fabric:clean",
            ":Fabric:build"
    ]
}

task neoforgeBuild(type: GradleBuild) {
    group = "_main"
    tasks = [
            ":Common:clean",
            ":NeoForge:clean",
            ":NeoForge:build"
    ]
}

task forgeBuild(type: GradleBuild) {
    group = "_main"
    tasks = [
            ":Common:clean",
            ":Forge:clean",
            ":Forge:build"
    ]
}

task allBuild(type: GradleBuild) {
    group = "_main"
    tasks = [
            ":Common:clean",
            ":Forge:clean",
            ":Fabric:clean",
            ":Common:build",
            ":Fabric:build",
            ":NeoForge:build",
            ":Forge:build"
    ]
}

task commonPublish(type: GradleBuild) {
    group = "_main"
    tasks = [
            ":Common:clean",
            ":Common:publishMavenJavaPublicationToFuzsModResourcesRepository"
    ]
}

task fabricPublish(type: GradleBuild) {
    group = "_main"
    tasks = [
            ":Common:clean",
            ":Fabric:clean",
            ":Fabric:publishMavenJavaPublicationToFuzsModResourcesRepository"
    ]
}

task neoforgePublish(type: GradleBuild) {
    group = "_main"
    tasks = [
            ":Common:clean",
            ":NeoForge:clean",
            ":NeoForge:publishMavenJavaPublicationToFuzsModResourcesRepository"
    ]
}

task forgePublish(type: GradleBuild) {
    group = "_main"
    tasks = [
            ":Common:clean",
            ":Forge:clean",
            ":Forge:publishMavenJavaPublicationToFuzsModResourcesRepository"
    ]
}

task allPublish(type: GradleBuild) {
    group = "_main"
    tasks = [
            ":Common:clean",
            ":Fabric:clean",
            ":NeoForge:clean",
            ":Forge:clean",
            ":Common:publishMavenJavaPublicationToFuzsModResourcesRepository",
            ":Fabric:publishMavenJavaPublicationToFuzsModResourcesRepository",
            ":NeoForge:publishMavenJavaPublicationToFuzsModResourcesRepository",
            ":Forge:publishMavenJavaPublicationToFuzsModResourcesRepository"
    ]
}

task fabricUploadCurseForge(type: GradleBuild) {
    group = "_main"
    tasks = [
            ":Common:clean",
            ":Fabric:clean",
            ":Fabric:curseforge"
    ]
}

task neoforgeUploadCurseForge(type: GradleBuild) {
    group = "_main"
    tasks = [
            ":Common:clean",
            ":NeoForge:clean",
            ":NeoForge:curseforge"
    ]
}

task forgeUploadCurseForge(type: GradleBuild) {
    group = "_main"
    tasks = [
            ":Common:clean",
            ":Forge:clean",
            ":Forge:curseforge"
    ]
}

task allUploadCurseForge(type: GradleBuild) {
    group = "_main"
    tasks = [
            ":Common:clean",
            ":Fabric:clean",
            ":NeoForge:clean",
            ":Forge:clean",
            ":Fabric:curseforge",
            ":NeoForge:curseforge",
            ":Forge:curseforge"
    ]
}

task fabricUploadModrinth(type: GradleBuild) {
    group = "_main"
    tasks = [
            ":Common:clean",
            ":Fabric:clean",
            ":Fabric:modrinth"
    ]
}

task neoforgeUploadModrinth(type: GradleBuild) {
    group = "_main"
    tasks = [
            ":Common:clean",
            ":NeoForge:clean",
            ":NeoForge:modrinth"
    ]
}

task forgeUploadModrinth(type: GradleBuild) {
    group = "_main"
    tasks = [
            ":Common:clean",
            ":Forge:clean",
            ":Forge:modrinth"
    ]
}

task allUploadModrinth(type: GradleBuild) {
    group = "_main"
    tasks = [
            ":Common:clean",
            ":Fabric:clean",
            ":NeoForge:clean",
            ":Forge:clean",
            ":Fabric:modrinth",
            ":NeoForge:modrinth",
            ":Forge:modrinth"
    ]
}

task fabricUploadEverywhere(type: GradleBuild) {
    group = "_main"
    tasks = [
            ":Common:clean",
            ":Fabric:clean",
            ":Fabric:curseforge",
            ":Fabric:modrinth"
    ]
}

task neoforgeUploadEverywhere(type: GradleBuild) {
    group = "_main"
    tasks = [
            ":Common:clean",
            ":NeoForge:clean",
            ":NeoForge:curseforge",
            ":NeoForge:modrinth"
    ]
}

task forgeUploadEverywhere(type: GradleBuild) {
    group = "_main"
    tasks = [
            ":Common:clean",
            ":Forge:clean",
            ":Forge:curseforge",
            ":Forge:modrinth"
    ]
}

task allUploadEverywhere(type: GradleBuild) {
    group = "_main"
    tasks = [
            ":Common:clean",
            ":Fabric:clean",
            ":NeoForge:clean",
            ":Forge:clean",
            ":Fabric:curseforge",
            ":Fabric:modrinth",
            ":NeoForge:curseforge",
            ":NeoForge:modrinth",
            ":Forge:curseforge",
            ":Forge:modrinth"
    ]
}

task commonGenSources(type: GradleBuild) {
    group = "_main"
    tasks = [
            ":Common:genSourcesWithVineflower"
    ]
}

task fabricGenSources(type: GradleBuild) {
    group = "_main"
    tasks = [
            ":Fabric:genSourcesWithVineflower"
    ]
}

task neoforgeGenSources(type: GradleBuild) {
    group = "_main"
    tasks = [
            ":NeoForge:genSourcesWithVineflower"
    ]
}

task forgeGenSources(type: GradleBuild) {
    group = "_main"
    tasks = [
            ":Forge:genSourcesWithVineflower"
    ]
}

task allGenSources(type: GradleBuild) {
    group = "_main"
    tasks = [
            ":Common:genSourcesWithVineflower",
            ":Fabric:genSourcesWithVineflower",
            ":NeoForge:genSourcesWithVineflower",
            ":Forge:genSourcesWithVineflower"
    ]
}

task fabricClient(type: GradleBuild) {
    group = "_main"
    tasks = [
            ":Fabric:runClient"
    ]
}

task neoforgeClient(type: GradleBuild) {
    group = "_main"
    tasks = [
            ":NeoForge:runClient"
    ]
}

task forgeClient(type: GradleBuild) {
    group = "_main"
    tasks = [
            ":Forge:runClient"
    ]
}

task fabricServer(type: GradleBuild) {
    group = "_main"
    tasks = [
            ":Fabric:runServer"
    ]
}

task neoforgeServer(type: GradleBuild) {
    group = "_main"
    tasks = [
            ":NeoForge:runServer"
    ]
}

task forgeServer(type: GradleBuild) {
    group = "_main"
    tasks = [
            ":Forge:runServer"
    ]
}

task neoforgeData(type: GradleBuild) {
    group = "_main"
    tasks = [
            ":NeoForge:runData"
    ]
}

task forgeData(type: GradleBuild) {
    group = "_main"
    tasks = [
            ":Forge:runData"
    ]
}
